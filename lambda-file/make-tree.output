State 29 conflicts: 3 shift/reduce
State 39 conflicts: 3 shift/reduce
State 40 conflicts: 3 shift/reduce
State 41 conflicts: 2 shift/reduce
State 42 conflicts: 3 shift/reduce
State 43 conflicts: 3 shift/reduce


Grammar

    0 $accept: input $end

    1 input: ε
    2      | input line

    3 line: '\n'
    4     | expr '\n'
    5     | error '\n'

    6 expr: abst
    7     | appl
    8     | vars

    9 abst: '(' abst ')'
   10     | '\\' abstvars '.' abst
   11     | '\\' abstvars '.' appl
   12     | '\\' abstvars '.' vars

   13 abstvars: vars
   14         | abstvars vars

   15 appl: '(' appl ')'
   16     | vars vars
   17     | abst abst
   18     | appl abst
   19     | '(' abst ')' appl
   20     | vars '(' appl ')'
   21     | vars abst
   22     | appl vars
   23     | '(' abst ')' vars

   24 vars: VAR
   25     | '(' vars ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5
    '(' (40) 9 15 19 20 23 25
    ')' (41) 9 15 19 20 23 25
    '.' (46) 10 11 12
    '\\' (92) 10 11 12
    error (256) 5
    VAR <char> (258) 24
    APPL (259)


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    input (11)
        on left: 1 2
        on right: 0 2
    line (12)
        on left: 3 4 5
        on right: 2
    expr <node *> (13)
        on left: 6 7 8
        on right: 4
    abst <node *> (14)
        on left: 9 10 11 12
        on right: 6 9 10 17 18 19 21 23
    abstvars <node *> (15)
        on left: 13 14
        on right: 10 11 12 14
    appl <node *> (16)
        on left: 15 16 17 18 19 20 21 22 23
        on right: 7 11 15 18 19 20 22
    vars <node *> (17)
        on left: 24 25
        on right: 8 12 13 14 16 20 21 22 23 25


State 0

    0 $accept: • input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • $end
    2 input: input • line

    $end   shift, and go to state 2
    error  shift, and go to state 3
    VAR    shift, and go to state 4
    '\n'   shift, and go to state 5
    '('    shift, and go to state 6
    '\\'   shift, and go to state 7

    line  go to state 8
    expr  go to state 9
    abst  go to state 10
    appl  go to state 11
    vars  go to state 12


State 2

    0 $accept: input $end •

    $default  accept


State 3

    5 line: error • '\n'

    '\n'  shift, and go to state 13


State 4

   24 vars: VAR •

    $default  reduce using rule 24 (vars)


State 5

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 6

    9 abst: '(' • abst ')'
   15 appl: '(' • appl ')'
   19     | '(' • abst ')' appl
   23     | '(' • abst ')' vars
   25 vars: '(' • vars ')'

    VAR   shift, and go to state 4
    '('   shift, and go to state 6
    '\\'  shift, and go to state 7

    abst  go to state 14
    appl  go to state 15
    vars  go to state 16


State 7

   10 abst: '\\' • abstvars '.' abst
   11     | '\\' • abstvars '.' appl
   12     | '\\' • abstvars '.' vars

    VAR  shift, and go to state 4
    '('  shift, and go to state 17

    abstvars  go to state 18
    vars      go to state 19


State 8

    2 input: input line •

    $default  reduce using rule 2 (input)


State 9

    4 line: expr • '\n'

    '\n'  shift, and go to state 20


State 10

    6 expr: abst •
   17 appl: abst • abst

    '('   shift, and go to state 21
    '\\'  shift, and go to state 7

    $default  reduce using rule 6 (expr)

    abst  go to state 22


State 11

    7 expr: appl •
   18 appl: appl • abst
   22     | appl • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 23
    '\\'  shift, and go to state 7

    $default  reduce using rule 7 (expr)

    abst  go to state 24
    vars  go to state 25


State 12

    8 expr: vars •
   16 appl: vars • vars
   20     | vars • '(' appl ')'
   21     | vars • abst

    VAR   shift, and go to state 4
    '('   shift, and go to state 26
    '\\'  shift, and go to state 7

    $default  reduce using rule 8 (expr)

    abst  go to state 27
    vars  go to state 28


State 13

    5 line: error '\n' •

    $default  reduce using rule 5 (line)


State 14

    9 abst: '(' abst • ')'
   17 appl: abst • abst
   19     | '(' abst • ')' appl
   23     | '(' abst • ')' vars

    '('   shift, and go to state 21
    ')'   shift, and go to state 29
    '\\'  shift, and go to state 7

    abst  go to state 22


State 15

   15 appl: '(' appl • ')'
   18     | appl • abst
   22     | appl • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 23
    ')'   shift, and go to state 30
    '\\'  shift, and go to state 7

    abst  go to state 24
    vars  go to state 25


State 16

   16 appl: vars • vars
   20     | vars • '(' appl ')'
   21     | vars • abst
   25 vars: '(' vars • ')'

    VAR   shift, and go to state 4
    '('   shift, and go to state 26
    ')'   shift, and go to state 31
    '\\'  shift, and go to state 7

    abst  go to state 27
    vars  go to state 28


State 17

   25 vars: '(' • vars ')'

    VAR  shift, and go to state 4
    '('  shift, and go to state 17

    vars  go to state 32


State 18

   10 abst: '\\' abstvars • '.' abst
   11     | '\\' abstvars • '.' appl
   12     | '\\' abstvars • '.' vars
   14 abstvars: abstvars • vars

    VAR  shift, and go to state 4
    '.'  shift, and go to state 33
    '('  shift, and go to state 17

    vars  go to state 34


State 19

   13 abstvars: vars •

    $default  reduce using rule 13 (abstvars)


State 20

    4 line: expr '\n' •

    $default  reduce using rule 4 (line)


State 21

    9 abst: '(' • abst ')'

    '('   shift, and go to state 21
    '\\'  shift, and go to state 7

    abst  go to state 35


State 22

   17 appl: abst abst •

    $default  reduce using rule 17 (appl)


State 23

    9 abst: '(' • abst ')'
   25 vars: '(' • vars ')'

    VAR   shift, and go to state 4
    '('   shift, and go to state 23
    '\\'  shift, and go to state 7

    abst  go to state 35
    vars  go to state 32


State 24

   18 appl: appl abst •

    $default  reduce using rule 18 (appl)


State 25

   22 appl: appl vars •

    $default  reduce using rule 22 (appl)


State 26

    9 abst: '(' • abst ')'
   20 appl: vars '(' • appl ')'
   25 vars: '(' • vars ')'

    VAR   shift, and go to state 4
    '('   shift, and go to state 6
    '\\'  shift, and go to state 7

    abst  go to state 36
    appl  go to state 37
    vars  go to state 16


State 27

   21 appl: vars abst •

    $default  reduce using rule 21 (appl)


State 28

   16 appl: vars vars •

    $default  reduce using rule 16 (appl)


State 29

    9 abst: '(' abst ')' •
   19 appl: '(' abst ')' • appl
   23     | '(' abst ')' • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 6
    '\\'  shift, and go to state 7

    VAR       [reduce using rule 9 (abst)]
    '('       [reduce using rule 9 (abst)]
    '\\'      [reduce using rule 9 (abst)]
    $default  reduce using rule 9 (abst)

    abst  go to state 38
    appl  go to state 39
    vars  go to state 40


State 30

   15 appl: '(' appl ')' •

    $default  reduce using rule 15 (appl)


State 31

   25 vars: '(' vars ')' •

    $default  reduce using rule 25 (vars)


State 32

   25 vars: '(' vars • ')'

    ')'  shift, and go to state 31


State 33

   10 abst: '\\' abstvars '.' • abst
   11     | '\\' abstvars '.' • appl
   12     | '\\' abstvars '.' • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 6
    '\\'  shift, and go to state 7

    abst  go to state 41
    appl  go to state 42
    vars  go to state 43


State 34

   14 abstvars: abstvars vars •

    $default  reduce using rule 14 (abstvars)


State 35

    9 abst: '(' abst • ')'

    ')'  shift, and go to state 44


State 36

    9 abst: '(' abst • ')'
   17 appl: abst • abst

    '('   shift, and go to state 21
    ')'   shift, and go to state 44
    '\\'  shift, and go to state 7

    abst  go to state 22


State 37

   18 appl: appl • abst
   20     | vars '(' appl • ')'
   22     | appl • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 23
    ')'   shift, and go to state 45
    '\\'  shift, and go to state 7

    abst  go to state 24
    vars  go to state 25


State 38

   17 appl: abst • abst

    '('   shift, and go to state 21
    '\\'  shift, and go to state 7

    abst  go to state 22


State 39

   18 appl: appl • abst
   19     | '(' abst ')' appl •
   22     | appl • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 23
    '\\'  shift, and go to state 7

    VAR       [reduce using rule 19 (appl)]
    '('       [reduce using rule 19 (appl)]
    '\\'      [reduce using rule 19 (appl)]
    $default  reduce using rule 19 (appl)

    abst  go to state 24
    vars  go to state 25


State 40

   16 appl: vars • vars
   20     | vars • '(' appl ')'
   21     | vars • abst
   23     | '(' abst ')' vars •

    VAR   shift, and go to state 4
    '('   shift, and go to state 26
    '\\'  shift, and go to state 7

    VAR       [reduce using rule 23 (appl)]
    '('       [reduce using rule 23 (appl)]
    '\\'      [reduce using rule 23 (appl)]
    $default  reduce using rule 23 (appl)

    abst  go to state 27
    vars  go to state 28


State 41

   10 abst: '\\' abstvars '.' abst •
   17 appl: abst • abst

    '('   shift, and go to state 21
    '\\'  shift, and go to state 7

    '('       [reduce using rule 10 (abst)]
    '\\'      [reduce using rule 10 (abst)]
    $default  reduce using rule 10 (abst)

    abst  go to state 22


State 42

   11 abst: '\\' abstvars '.' appl •
   18 appl: appl • abst
   22     | appl • vars

    VAR   shift, and go to state 4
    '('   shift, and go to state 23
    '\\'  shift, and go to state 7

    VAR       [reduce using rule 11 (abst)]
    '('       [reduce using rule 11 (abst)]
    '\\'      [reduce using rule 11 (abst)]
    $default  reduce using rule 11 (abst)

    abst  go to state 24
    vars  go to state 25


State 43

   12 abst: '\\' abstvars '.' vars •
   16 appl: vars • vars
   20     | vars • '(' appl ')'
   21     | vars • abst

    VAR   shift, and go to state 4
    '('   shift, and go to state 26
    '\\'  shift, and go to state 7

    VAR       [reduce using rule 12 (abst)]
    '('       [reduce using rule 12 (abst)]
    '\\'      [reduce using rule 12 (abst)]
    $default  reduce using rule 12 (abst)

    abst  go to state 27
    vars  go to state 28


State 44

    9 abst: '(' abst ')' •

    $default  reduce using rule 9 (abst)


State 45

   20 appl: vars '(' appl ')' •

    $default  reduce using rule 20 (appl)
